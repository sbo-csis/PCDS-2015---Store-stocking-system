@model StoreStockingSystem.Models.StockRefill

@{
    ViewBag.Title = "Critial Stores";
}

<!DOCTYPE html>

<html>
<head>
    <title>ViewBag.Title</title>
</head>
<body>
    <style>
        .critical {
            background-color: red;
        }

        .warning {
            background-color: yellow;
        }

        .okay {
            background-color: greenyellow;
        }
    </style>

    <div>


        @section scripts
    {
            <!-- DataTables CSS -->
            <link rel="stylesheet" type="text/css" href="~/Scripts/DataTables-1.10.5/media/css/jquery.dataTables.css">

            <!-- jQuery -->
            <script type="text/javascript" charset="utf8" src="~/Scripts/DataTables-1.10.5/media/js/jquery.js"></script>

            <!-- DataTables -->
            <script type="text/javascript" charset="utf8" src="~/Scripts/DataTables-1.10.5/media/js/jquery.dataTables.js"></script>

            <script>
                $(document).ready(function () {
                    var criticalCustomers = $('#criticalCustomers').DataTable();
                    var selectedCustomers = $('#selectedCustomers').DataTable();
                    var waypoints = $('#waypoints2').DataTable();


                    $('#criticalCustomers tbody').on('click', 'tr', function () {
                        $(this).toggleClass('selected');
                        selectedCustomers.clear();
                        waypoints.clear();
                        var ids = $.map(criticalCustomers.rows('.selected').data(), function (item) {
                            selectedCustomers.row.add(item);
                            var addr = item[1];
                            waypoints.row.add([addr]);
                            return item[0];
                        });
                        selectedCustomers.draw();
                        waypoints.draw();
                    });

                    //$('#button').click(function () {
                    //    selectedCustomers.clear();
                    //    var ids = $.map(criticalCustomers.rows('.selected').data(), function (item) {
                    //        selectedCustomers.row.add(item);
                    //        return item[0];
                    //    });
                    //    console.log('Button pressed');
                    //    //console.log(ids);
                    //    //alert(table.rows('.selected').data().length + ' row(s) selected');
                    //    selectedCustomers.draw();
                    //});


                    //$('#criticalCustomers tbody').on('click', 'tr', function() {
                    //    var id = this.id;
                    //    var index = $.inArray(id, selected);

                    //    if (index === -1) {
                    //        selected.push(id);
                    //    } else {
                    //        selected.splice(index, 1);
                    //    }

                    //    $(this).toggleClass('selected');
                    //})


                });

            </script>

            <!--Static Google Maps example-->
            <script type="text/javascript"
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDFZQo4FYhLzLW9FIwKmbO235mRDg6n2kM">

            </script>
            <!--Google Maps stuff-->
            <script type="text/javascript">

                // Show map
                //var locations = [
                //    ['Bondi Beach', -33.890542, 151.274856, 4],
                //    ['Coogee Beach', -33.923036, 151.259052, 5],
                //    ['Cronulla Beach', -34.028249, 151.157507, 3],
                //    ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
                //    ['Maroubra Beach', -33.950198, 151.259302, 1]
                //];

                //var map = new google.maps.Map(document.getElementById('map'), {
                //    zoom: 10,
                //    center: new google.maps.LatLng(-33.92, 151.25),
                //    mapTypeId: google.maps.MapTypeId.ROADMAP
                //});

                //var infowindow = new google.maps.InfoWindow();

                //var marker, i;

                //for (i = 0; i < locations.length; i++) {
                //    marker = new google.maps.Marker({
                //        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                //        map: map
                //    });

                //    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                //        return function () {
                //            infowindow.setContent(locations[i][0]);
                //            infowindow.open(map, marker);
                //        }
                //    })(marker, i));
                //}


                // Route calculation
                var directionsService = new google.maps.DirectionsService();
                var directionsDisplay;
                var map;

                function initialize() {
                    directionsDisplay = new google.maps.DirectionsRenderer();
                    var copenhagen = new google.maps.LatLng(55.6712673, 12.5608388);
                    var mapOptions = {
                        zoom: 6,
                        center: copenhagen
                    }
                    map = new google.maps.Map(document.getElementById('map'), mapOptions);
                    directionsDisplay.setMap(map);
                }


                // Calculation function
                function calcRoute() {
                    var start = document.getElementById('startLocation').value;
                    var end = document.getElementById('endLocation').value;
                    // Updated address selection

                    var waypts = [];
                    var selectedTable = document.getElementById('waypoints2');
                    var rows = selectedTable.getElementsByTagName("tr");

                    for (var i = 1; i < rows.length; i++) {
                        console.log(rows[i].cells[0].innerHTML);
                        waypts.push({
                            location: rows[i].cells[0].innerHTML,
                            stopover: true
                        });
                    }

                    Geocoder coder = new Geocoder(this);
                        address = coder.getFromLocationName(strAddress,5);
                        if (address == null) {
                            return null;
                        }
                        Address location = address.get(0);
                        location.getLatitude();
                        location.getLongitude();

                    // Old address selection
                    //var waypts = [];
                    //var checkboxArray = document.getElementById('waypoints');
                    //for (var i = 0; i < checkboxArray.length; i++) {
                    //    if (checkboxArray.options[i].selected == true) {
                    //        waypts.push({
                    //            location: checkboxArray[i].value,
                    //            stopover: true
                    //        });
                    //    }
                    //}

                    var request = {
                        origin: start,
                        destination: end,
                        waypoints: waypts,
                        optimizeWaypoints: true,
                        travelMode: google.maps.TravelMode.DRIVING
                    };
                    directionsService.route(request, function (response, status) {
                        if (status == google.maps.DirectionsStatus.OK) {
                            directionsDisplay.setDirections(response);
                            var route = response.routes[0];
                            var summaryPanel = document.getElementById('directions_panel');
                            summaryPanel.innerHTML = '';
                            // For each route, display summary information.
                            var duration = 0;
                            var distance = 0;
                            for (var i = 0; i < route.legs.length; i++) {
                                var routeSegment = i + 1;
                                // Summarize duration & distance
                                duration += route.legs[i].duration.value;
                                distance += route.legs[i].distance.value;


                                summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment + '</b><br>';
                                summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                                summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                                summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                            }
                            // Set total duration and distance fields
                            var totalDur = document.getElementById('totalDuration');
                            totalDur.innerHTML = '<b>Total duration: ' + duration / 60 + ' minutes</b>';
                            var totalDist = document.getElementById('totalDistance');
                            totalDist.innerHTML = '<b>Total distance: ' + distance / 1000 + ' km</b>';
                        }

                    });
                }
                google.maps.event.addDomListener(window, 'load', initialize);
            </script>

            <!--Google Maps route calculation-->
            @*var addresses = [
                ['FONA Trianglen, Østerbrogade 62, 2100 København Ø, Denmark'],
                ['FONA, Nørre Voldgade 17, 1358 København K, Denmark'],
                ['FONA Strøget, Østergade 47, 1100 København K, Denmark'],
                ['FONA, Nørrebro Bycenter, Lygten 2, 2400 København NV'],
                ['FONA Amager Centret, Amager Centret 136, 2300 København S, Denmark'],
                ['FONA, Nørrebro Bycenter, Lygten 2, 2400 København NV']
                ];*@
        }

        <h1>Critical stock status</h1>
        <table id="criticalCustomers" class="display" style="width: 100%;">
            <thead>
                <tr>
                    <th>Store id</th>
                    <th>Store name</th>
                    <th>Stock type</th>
                    <th>Product name</th>
                    <th>Warning amount</th>
                    <th>Current amount</th>
                </tr>
            </thead>
            <tbody>
                @using (Html.BeginForm())
                {
                    foreach (var stock in Model.Stocks)
                    {
                        var currentMissingProductCount = 0;

                        @*foreach (var productstock in stock.ProductStocks)
                            {
                                currentMissingProductCount += productstock.Capacity - productstock.CurrentAmount;
                            }

                            @Html.HiddenFor(m => stock)

                            <tr class="critical">
                                <td>@Html.LabelFor(m => stock.Store.Name)</td>
                                <td>@Html.LabelFor(m => stock.DisplayType.Name)</td>
                                <td>currentMissingProductCount</td>
                                <td>@Html.CheckBoxFor(m => stock.SelectedForRefilling)</td>
                            </tr>*@


                        foreach (var productStock in stock.ProductStocks)
                        {
                            if (productStock.CurrentAmount <= productStock.WarningAmount || productStock.CurrentAmount <= stock.WarningAmountLeft)
                            {
                                <tr class="critical">
                                    <td>@stock.Store.Id</td>
                                    <td>@stock.Store.Name</td>
                                    <td>@stock.DisplayType.Name</td>
                                    <td>@productStock.Product.Name</td>
                                    <td>@(productStock.WarningAmount ?? stock.WarningAmountLeft)</td>
                                    <td>@productStock.CurrentAmount</td>
                                </tr>
                            }
                        }
                    }


                }
            </tbody>
        </table>

        <h3>Selected stores</h3>
        <table id="selectedCustomers" class="display" style="width: 100%;">
            <thead>
                <tr>
                    <th>Store id</th>
                    <th>Store name</th>
                    <th>Stock type</th>
                    <th>Product name</th>
                    <th>Warning amount</th>
                    <th>Current amount</th>
                    @*<th>Address</th>*@
                </tr>
            </thead>
            <tbody>

                @*@foreach (var stock in Model)
                    {
                        foreach (var productStock in stock.ProductStocks)
                        {
                            if (productStock.Amount <= productStock.WarningAmount || productStock.Amount <= stock.WarningAmountLeft)
                            {
                                <tr class="critical">
                                    <td>@stock.Store.Id</td>
                                    <td>@stock.Store.Name</td>
                                    <td>@stock.DisplayType.Name</td>
                                    <td>@productStock.Product.Name</td>
                                    <td>@(productStock.WarningAmount ?? stock.WarningAmountLeft)</td>
                                    <td>@productStock.Amount</td>
                                </tr>
                            }
                        }
                    }*@
            </tbody>
        </table>

        <h3>Waypoints</h3>
        <table id="waypoints2" class="display" style="width: 100%;">
            <thead>
                <tr>
                    <th>Address</th>
                </tr>
            </thead>
            <tbody>

                @*@foreach (var stock in Model)
                    {
                        foreach (var productStock in stock.ProductStocks)
                        {
                            if (productStock.Amount <= productStock.WarningAmount || productStock.Amount <= stock.WarningAmountLeft)
                            {
                                <tr class="critical">
                                    <td>@stock.Store.Id</td>
                                    <td>@stock.Store.Name</td>
                                    <td>@stock.DisplayType.Name</td>
                                    <td>@productStock.Product.Name</td>
                                    <td>@(productStock.WarningAmount ?? stock.WarningAmountLeft)</td>
                                    <td>@productStock.Amount</td>
                                </tr>
                            }
                        }
                    }*@
            </tbody>
        </table>


        @*<h1>Critical stock status</h1>
                <table id="criticalCustomers" style="width: 100%;">
                    <thead>
                        <tr>
                            <th>Customer name</th>
                            <th>Stock status</th>
                            <th>Product name</th>
                            <th>Expected sold out date</th>
                            <th>Estimated sales loss</th>
                            <th>Responsibility</th>
                            <th>Select store</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!--Note that DataTable overwrites css class styles-->
                        <tr class="critical" style="background-color: red">
                            <td id="custID">Irma Nørreport</td>
                            <td>Sold out</td>
                            <td>Faldskærmsspring</td>
                            <td>01/03-2015</td>
                            <td>1000</td>
                            <td>
                                <select>
                                    <option value="karsten">Karsten</option>
                                    <option value="kirsten">Kirsten</option>
                                    <option value="ole">Ole</option>
                                    <option value="else">Else</option>
                                </select>
                            </td>
                            <td><input type="checkbox" name="custID" /></td>
                        </tr>
                        <tr class="warning" style="background-color: yellow">
                            <td>Føtex Nyk. F.</td>
                            <td>Low stock</td>
                            <td>Romantisk middag</td>
                            <td>05/03-2015</td>
                            <td>0</td>
                            <td>
                                <select>
                                    <option value="karsten">Karsten</option>
                                    <option value="kirsten">Kirsten</option>
                                    <option value="ole">Ole</option>
                                    <option value="else">Else</option>
                                </select>
                            </td>
                            <td><input type="checkbox" name="custID" /></td>
                        </tr>
                        <tr class="okay" style="background-color: greenyellow">
                            <td>Bilka Næstved</td>
                            <td>On stock</td>
                            <td>Romantisk middag for 3</td>
                            <td>01/04-2015</td>
                            <td>0</td>
                            <td>
                                <select>
                                    <option value="karsten">Karsten</option>
                                    <option value="kirsten">Kirsten</option>
                                    <option value="ole">Ole</option>
                                    <option value="else">Else</option>
                                </select>
                            </td>
                            <td><input type="checkbox" name="custID" /></td>
                        </tr>
                    </tbody>
                </table>
            </div>*@

        <h3>Store locations</h3>
        <table>
            <tr>
                <td>
                    <div id="map" style="width: 500px; height: 400px; vertical-align: top; float: left; "></div>
                </td>
                <!--Right side of map area-->
                <td style="vertical-align: top">
                    <table>
                        <tr>
                            <td>
                                <!--<div id=" mapoptions" style="width: 200px; height: 400px; float: left; margin-left: 20px;">
                                -->
                                <h4>Start location</h4>
                            </td>
                            <td>
                                <select id="startLocation">
                                    <option value="Glostrup st.">Glostrup st.</option>
                                    <option value="Sortedam Dossering">Sortedam Dossering</option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <h4>End location</h4>
                            </td>
                            <td>
                                <select id="endLocation">
                                    <option value="Glostrup st.">Glostrup st.</option>
                                    <option value="Sortedam Dossering">Sortedam Dossering</option>
                                </select>

                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <h4>Selected locations</h4>
                                <select multiple id="waypoints" style="height:100px; width:100%; overflow:hidden; overflow-y:scroll;">
                                    <option value="FONA Trianglen, Østerbrogade 62, 2100 København Ø, Denmark">FONA Triangen</option>
                                    <option value="FONA, Nørre Voldgade 17, 1358 København K, Denmark">
                                        FONE Nørre Voldgade
                                    </option>
                                    <option value="FONA Strøget, Østergade 47, 1100 København K, Denmark">FONA Strøget</option>
                                    <option value="FONA, Nørrebro Bycenter, Lygten 2, 2400 København NV">FONA Nørrebro by</option>
                                    <option value="FONA Amager Centret, Amager Centret 136, 2300 København S, Denmark">FONA Amager Centret</option>
                                    <option value="FONA, Spinderiet, Valby Torvegade 18, 2500 Valby, Denmark">FONA Valby</option>
                                </select>

                            </td>
                        </tr>
                        <tr>
                            <td>
                                <button type="button" onclick=" calcRoute(); ">Calculate route</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <p id="totalDuration">0</p>
                                <p id="totalDistance">0</p>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <div id="directions_panel" style="margin:20px;background-color:#FFEE77;"></div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>


</body>
</html>